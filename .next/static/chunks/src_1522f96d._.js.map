{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD;IACpD,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 315, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/RealTimeTraining.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useRef } from \"react\"\nimport { Exercise, TrainingSession, SessionExercise, SessionSet, TimerState } from \"@/types\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Label } from \"@/components/ui/label\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\n\nexport default function RealTimeTraining() {\n  const [exercises, setExercises] = useState<Exercise[]>([])\n  const [selectedExercises, setSelectedExercises] = useState<string[]>([])\n  const [currentSession, setCurrentSession] = useState<TrainingSession | null>(null)\n  const [currentExerciseIndex, setCurrentExerciseIndex] = useState(0)\n  const [currentSetIndex, setCurrentSetIndex] = useState(0)\n  const [timer, setTimer] = useState<TimerState>({\n    isRunning: false,\n    isPaused: false,\n    seconds: 0,\n    minutes: 0,\n    hours: 0\n  })\n  const [restTimer, setRestTimer] = useState(0)\n  const [isResting, setIsResting] = useState(false)\n  const [currentWeight, setCurrentWeight] = useState(\"\")\n  const [currentReps, setCurrentReps] = useState(\"\")\n  const [sessionStarted, setSessionStarted] = useState(false)\n\n  const timerRef = useRef<NodeJS.Timeout | null>(null)\n  const restTimerRef = useRef<NodeJS.Timeout | null>(null)\n\n  useEffect(() => {\n    loadExercises()\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current)\n      if (restTimerRef.current) clearInterval(restTimerRef.current)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (timer.isRunning && !timer.isPaused) {\n      timerRef.current = setInterval(() => {\n        setTimer(prev => {\n          let newSeconds = prev.seconds + 1\n          let newMinutes = prev.minutes\n          let newHours = prev.hours\n\n          if (newSeconds >= 60) {\n            newSeconds = 0\n            newMinutes += 1\n          }\n          if (newMinutes >= 60) {\n            newMinutes = 0\n            newHours += 1\n          }\n\n          return {\n            ...prev,\n            seconds: newSeconds,\n            minutes: newMinutes,\n            hours: newHours\n          }\n        })\n      }, 1000)\n    } else {\n      if (timerRef.current) {\n        clearInterval(timerRef.current)\n        timerRef.current = null\n      }\n    }\n\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current)\n    }\n  }, [timer.isRunning, timer.isPaused])\n\n  useEffect(() => {\n    if (isResting && restTimer > 0) {\n      restTimerRef.current = setInterval(() => {\n        setRestTimer(prev => {\n          if (prev <= 1) {\n            setIsResting(false)\n            return 0\n          }\n          return prev - 1\n        })\n      }, 1000)\n    } else {\n      if (restTimerRef.current) {\n        clearInterval(restTimerRef.current)\n        restTimerRef.current = null\n      }\n    }\n\n    return () => {\n      if (restTimerRef.current) clearInterval(restTimerRef.current)\n    }\n  }, [isResting, restTimer])\n\n  const loadExercises = () => {\n    try {\n      const savedExercises = localStorage.getItem('gym-exercises')\n      if (savedExercises) {\n        const parsed = JSON.parse(savedExercises)\n        setExercises(parsed.map((ex: any) => ({\n          ...ex,\n          createdAt: new Date(ex.createdAt),\n          updatedAt: new Date(ex.updatedAt)\n        })))\n      }\n    } catch (error) {\n      console.error('Error loading exercises:', error)\n    }\n  }\n\n  const startSession = () => {\n    if (selectedExercises.length === 0) {\n      alert('Wybierz przynajmniej jedno ćwiczenie')\n      return\n    }\n\n    const sessionExercises: SessionExercise[] = selectedExercises.map(exerciseId => {\n      const exercise = exercises.find(ex => ex.id === exerciseId)!\n      return {\n        exerciseId,\n        exerciseName: exercise.name,\n        sets: Array.from({ length: exercise.sets }, (_, index) => ({\n          setNumber: index + 1,\n          weight: 0,\n          reps: 0,\n          completed: false\n        })),\n        completed: false\n      }\n    })\n\n    const newSession: TrainingSession = {\n      id: `session-${Date.now()}`,\n      startTime: new Date(),\n      exercises: sessionExercises,\n      totalDuration: 0\n    }\n\n    setCurrentSession(newSession)\n    setCurrentExerciseIndex(0)\n    setCurrentSetIndex(0)\n    setSessionStarted(true)\n    \n    // Set initial weight suggestion\n    const firstExercise = exercises.find(ex => ex.id === selectedExercises[0])\n    if (firstExercise) {\n      setCurrentWeight(firstExercise.maxWeight.toString())\n      setCurrentReps(firstExercise.reps.toString())\n    }\n\n    setTimer({ isRunning: true, isPaused: false, seconds: 0, minutes: 0, hours: 0 })\n  }\n\n  const pauseTimer = () => {\n    setTimer(prev => ({ ...prev, isPaused: !prev.isPaused }))\n  }\n\n  const completeSet = () => {\n    if (!currentSession || !currentWeight || !currentReps) {\n      alert('Wprowadź ciężar i liczbę powtórzeń')\n      return\n    }\n\n    const updatedSession = { ...currentSession }\n    const currentExercise = updatedSession.exercises[currentExerciseIndex]\n    const currentSet = currentExercise.sets[currentSetIndex]\n\n    currentSet.weight = Number(currentWeight)\n    currentSet.reps = Number(currentReps)\n    currentSet.completed = true\n\n    setCurrentSession(updatedSession)\n\n    // Start rest timer\n    setRestTimer(90) // 90 seconds rest\n    setIsResting(true)\n\n    // Move to next set or exercise\n    if (currentSetIndex < currentExercise.sets.length - 1) {\n      setCurrentSetIndex(currentSetIndex + 1)\n    } else {\n      // Mark exercise as completed\n      currentExercise.completed = true\n      \n      if (currentExerciseIndex < updatedSession.exercises.length - 1) {\n        // Move to next exercise\n        setCurrentExerciseIndex(currentExerciseIndex + 1)\n        setCurrentSetIndex(0)\n        \n        // Set weight suggestion for next exercise\n        const nextExercise = exercises.find(ex => ex.id === selectedExercises[currentExerciseIndex + 1])\n        if (nextExercise) {\n          setCurrentWeight(nextExercise.maxWeight.toString())\n          setCurrentReps(nextExercise.reps.toString())\n        }\n      } else {\n        // Session completed\n        finishSession()\n      }\n    }\n  }\n\n  const skipRest = () => {\n    setIsResting(false)\n    setRestTimer(0)\n  }\n\n  const finishSession = () => {\n    if (!currentSession) return\n\n    const finishedSession = {\n      ...currentSession,\n      endTime: new Date(),\n      totalDuration: timer.hours * 3600 + timer.minutes * 60 + timer.seconds\n    }\n\n    // Save session to localStorage\n    try {\n      const savedSessions = localStorage.getItem('gym-training-sessions')\n      const sessions = savedSessions ? JSON.parse(savedSessions) : []\n      sessions.push(finishedSession)\n      localStorage.setItem('gym-training-sessions', JSON.stringify(sessions))\n    } catch (error) {\n      console.error('Error saving session:', error)\n    }\n\n    // Reset state\n    setCurrentSession(null)\n    setSessionStarted(false)\n    setCurrentExerciseIndex(0)\n    setCurrentSetIndex(0)\n    setTimer({ isRunning: false, isPaused: false, seconds: 0, minutes: 0, hours: 0 })\n    setSelectedExercises([])\n    setCurrentWeight(\"\")\n    setCurrentReps(\"\")\n    setIsResting(false)\n    setRestTimer(0)\n\n    alert('Trening zakończony! Gratulacje!')\n  }\n\n  const formatTime = (hours: number, minutes: number, seconds: number) => {\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\n  }\n\n  const formatRestTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60)\n    const secs = seconds % 60\n    return `${mins}:${secs.toString().padStart(2, '0')}`\n  }\n\n  const getSessionProgress = () => {\n    if (!currentSession) return 0\n    \n    const totalSets = currentSession.exercises.reduce((acc, ex) => acc + ex.sets.length, 0)\n    const completedSets = currentSession.exercises.reduce((acc, ex) => \n      acc + ex.sets.filter(set => set.completed).length, 0\n    )\n    \n    return totalSets > 0 ? (completedSets / totalSets) * 100 : 0\n  }\n\n  if (!sessionStarted) {\n    return (\n      <div className=\"space-y-6\">\n        <Card className=\"border-gray-200\">\n          <CardHeader>\n            <CardTitle className=\"text-xl font-semibold text-black\">\n              Rozpocznij trening na żywo\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label className=\"text-sm font-medium text-black\">\n                Wybierz ćwiczenia do treningu\n              </Label>\n              <div className=\"space-y-2 max-h-64 overflow-y-auto\">\n                {exercises.map((exercise) => (\n                  <div key={exercise.id} className=\"flex items-center space-x-2\">\n                    <input\n                      type=\"checkbox\"\n                      id={exercise.id}\n                      checked={selectedExercises.includes(exercise.id)}\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          setSelectedExercises([...selectedExercises, exercise.id])\n                        } else {\n                          setSelectedExercises(selectedExercises.filter(id => id !== exercise.id))\n                        }\n                      }}\n                      className=\"rounded border-gray-300\"\n                    />\n                    <label htmlFor={exercise.id} className=\"text-sm text-black cursor-pointer\">\n                      {exercise.name} ({exercise.sets} serie × {exercise.reps} powtórzeń)\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {selectedExercises.length > 0 && (\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h4 className=\"font-medium text-black mb-2\">Wybrane ćwiczenia:</h4>\n                <ul className=\"text-sm text-gray-700 space-y-1\">\n                  {selectedExercises.map(exerciseId => {\n                    const exercise = exercises.find(ex => ex.id === exerciseId)\n                    return exercise ? (\n                      <li key={exerciseId}>• {exercise.name}</li>\n                    ) : null\n                  })}\n                </ul>\n              </div>\n            )}\n\n            <Button\n              onClick={startSession}\n              disabled={selectedExercises.length === 0}\n              className=\"w-full bg-black text-white hover:bg-gray-800\"\n            >\n              Rozpocznij trening\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n\n  const currentExercise = currentSession?.exercises[currentExerciseIndex]\n  const currentSet = currentExercise?.sets[currentSetIndex]\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Timer and Progress */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <Card className=\"border-gray-200\">\n          <CardHeader>\n            <CardTitle className=\"text-lg font-semibold text-black\">\n              Czas treningu\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold text-black mb-4\">\n              {formatTime(timer.hours, timer.minutes, timer.seconds)}\n            </div>\n            <div className=\"flex space-x-2\">\n              <Button\n                onClick={pauseTimer}\n                variant=\"outline\"\n                className=\"border-gray-300 text-black hover:bg-gray-50\"\n              >\n                {timer.isPaused ? 'Wznów' : 'Pauza'}\n              </Button>\n              <Button\n                onClick={finishSession}\n                variant=\"outline\"\n                className=\"border-red-300 text-red-600 hover:bg-red-50\"\n              >\n                Zakończ\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"border-gray-200\">\n          <CardHeader>\n            <CardTitle className=\"text-lg font-semibold text-black\">\n              Postęp treningu\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-gray-600\">Ukończone</span>\n                <span className=\"font-medium text-black\">\n                  {Math.round(getSessionProgress())}%\n                </span>\n              </div>\n              <Progress value={getSessionProgress()} className=\"h-2\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Rest Timer */}\n      {isResting && (\n        <Card className=\"border-orange-200 bg-orange-50\">\n          <CardContent className=\"pt-6\">\n            <div className=\"text-center\">\n              <h3 className=\"text-lg font-semibold text-black mb-2\">\n                Przerwa między seriami\n              </h3>\n              <div className=\"text-2xl font-bold text-orange-600 mb-4\">\n                {formatRestTime(restTimer)}\n              </div>\n              <Button\n                onClick={skipRest}\n                variant=\"outline\"\n                className=\"border-orange-300 text-orange-700 hover:bg-orange-100\"\n              >\n                Pomiń przerwę\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Current Exercise */}\n      {currentExercise && (\n        <Card className=\"border-gray-200\">\n          <CardHeader>\n            <CardTitle className=\"text-xl font-semibold text-black\">\n              {currentExercise.exerciseName}\n            </CardTitle>\n            <p className=\"text-gray-600\">\n              Seria {currentSetIndex + 1} z {currentExercise.sets.length}\n            </p>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"weight\" className=\"text-sm font-medium text-black\">\n                  Ciężar (kg)\n                </Label>\n                <Input\n                  id=\"weight\"\n                  type=\"number\"\n                  value={currentWeight}\n                  onChange={(e) => setCurrentWeight(e.target.value)}\n                  className=\"border-gray-300\"\n                  disabled={isResting}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"reps\" className=\"text-sm font-medium text-black\">\n                  Powtórzenia\n                </Label>\n                <Input\n                  id=\"reps\"\n                  type=\"number\"\n                  value={currentReps}\n                  onChange={(e) => setCurrentReps(e.target.value)}\n                  className=\"border-gray-300\"\n                  disabled={isResting}\n                />\n              </div>\n            </div>\n\n            <Button\n              onClick={completeSet}\n              disabled={isResting || !currentWeight || !currentReps}\n              className=\"w-full bg-black text-white hover:bg-gray-800\"\n            >\n              {currentSetIndex === currentExercise.sets.length - 1 && \n               currentExerciseIndex === currentSession!.exercises.length - 1\n                ? 'Zakończ trening'\n                : 'Ukończ serię'\n              }\n            </Button>\n\n            {/* Sets Progress */}\n            <div className=\"space-y-2\">\n              <h4 className=\"font-medium text-black\">Serie:</h4>\n              <div className=\"grid grid-cols-4 gap-2\">\n                {currentExercise.sets.map((set, index) => (\n                  <div\n                    key={index}\n                    className={`p-2 rounded text-center text-sm ${\n                      set.completed\n                        ? 'bg-green-100 border border-green-300 text-green-700'\n                        : index === currentSetIndex\n                        ? 'bg-blue-100 border border-blue-300 text-blue-700'\n                        : 'bg-gray-100 border border-gray-300 text-gray-500'\n                    }`}\n                  >\n                    {index + 1}\n                    {set.completed && (\n                      <div className=\"text-xs\">\n                        {set.weight}kg × {set.reps}\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Exercise List */}\n      <Card className=\"border-gray-200\">\n        <CardHeader>\n          <CardTitle className=\"text-lg font-semibold text-black\">\n            Plan treningu\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-3\">\n            {currentSession?.exercises.map((exercise, index) => (\n              <div\n                key={exercise.exerciseId}\n                className={`p-3 rounded-lg border ${\n                  exercise.completed\n                    ? 'bg-green-50 border-green-200'\n                    : index === currentExerciseIndex\n                    ? 'bg-blue-50 border-blue-200'\n                    : 'bg-gray-50 border-gray-200'\n                }`}\n              >\n                <div className=\"flex justify-between items-center\">\n                  <h4 className=\"font-medium text-black\">\n                    {exercise.exerciseName}\n                  </h4>\n                  <span className=\"text-sm text-gray-600\">\n                    {exercise.sets.filter(set => set.completed).length} / {exercise.sets.length} serii\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1228, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/gym/training/page.tsx"],"sourcesContent":["\"use client\"\n\nimport RealTimeTraining from \"@/components/RealTimeTraining\"\n\nexport default function TrainingPage() {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-3xl font-bold text-black\">Trening na Żywo</h1>\n        <p className=\"text-gray-600 mt-2\">\n          Rozpocznij sesję treningową w czasie rzeczywistym z timerem i śledzeniem postępów\n        </p>\n      </div>\n\n      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\n        <h3 className=\"font-semibold text-black mb-2\">Jak korzystać z treningu na żywo:</h3>\n        <ul className=\"text-sm text-gray-700 space-y-1\">\n          <li>• Wybierz ćwiczenia, które chcesz wykonać podczas treningu</li>\n          <li>• Rozpocznij sesję - timer automatycznie zacznie odliczać czas</li>\n          <li>• Dla każdej serii wprowadź ciężar i liczbę powtórzeń</li>\n          <li>• Po ukończeniu serii rozpocznie się automatyczna przerwa (90 sekund)</li>\n          <li>• Śledź swój postęp w czasie rzeczywistym</li>\n          <li>• Zakończ trening, gdy ukończysz wszystkie zaplanowane ćwiczenia</li>\n        </ul>\n      </div>\n\n      <RealTimeTraining />\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;kCAAgC;;;;;;kCAC9C,6LAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAKpC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAgC;;;;;;kCAC9C,6LAAC;wBAAG,WAAU;;0CACZ,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;0CAAG;;;;;;0CACJ,6LAAC;0CAAG;;;;;;;;;;;;;;;;;;0BAIR,6LAAC,yIAAA,CAAA,UAAgB;;;;;;;;;;;AAGvB;KAzBwB","debugId":null}}]
}